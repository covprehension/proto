library(ggplot2)
library(dplyr)
library(gganimate)
rm(list = ls())
setwd("~/github/Covprehention/proto/base/")
data.df <- read.csv("data/CoVprehension transmission_sim1b-table.csv", header = T, skip = 6)
small.df <- data.df %>% ##Aggreger les résultats
group_by(X.step., i.proba.transmission) %>%
summarise(med.contamination = median(current.nb.new.infections.reported) + median(current.nb.new.infections.asymptomatic),
med.s = median(nb_S),
med.Ir = median(nb_Ir),
med.Inr = median(nb_Inr))
dput(small.df)
?head
dput(head(small.df,100))
dput(head(small.df,100))
a <- structure(list(X.step. = c(0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L,
0L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L,
2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 4L,
4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 5L, 5L, 5L, 5L, 5L, 5L, 5L,
5L, 5L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 7L, 7L, 7L,
7L, 7L, 7L, 7L, 7L, 7L, 7L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L,
8L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L), i.proba.transmission = c(0.1,
0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 0.1, 0.2, 0.3, 0.4,
0.5, 0.6, 0.7, 0.8, 0.9, 1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,
0.8, 0.9, 1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1,
0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 0.1, 0.2, 0.3,
0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6,
0.7, 0.8, 0.9, 1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,
1, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 0.1, 0.2,
0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1), med.contamination = c(0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1), med.s = c(499,
499, 499, 499, 499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
499, 499, 499, 499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
498.5, 498, 498, 499, 499, 499, 499, 498, 498.5, 498, 498, 497.5,
498, 499, 499, 499, 498, 498, 498, 498, 498, 497, 497, 499, 499,
498, 498, 498, 498, 498, 497, 497, 497, 499, 499, 498, 498, 498,
497.5, 497, 497, 496, 496, 499, 499, 498, 498, 497, 497, 497,
496, 495.5, 495.5, 499, 499, 498, 497, 497, 497, 496.5, 495,
495.5, 494, 499, 498, 497, 497, 496, 496, 496, 495, 495, 494),
med.Ir = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.5, 2, 2, 1, 1, 1, 1, 2,
1.5, 2, 2, 2.5, 2, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 1, 1, 2,
2, 2, 2, 2, 3, 3, 3, 1, 1, 2, 2, 2, 2.5, 3, 3, 4, 4, 1, 1,
2, 2, 3, 3, 3, 4, 4.5, 4.5, 1, 1, 2, 3, 3, 3, 3.5, 5, 4.5,
6, 1, 2, 3, 3, 4, 4, 4, 5, 5, 6), med.Inr = c(0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0)), class = c("grouped_df", "tbl_df", "tbl", "data.frame"
), row.names = c(NA, -100L), groups = structure(list(X.step. = 0:9,
.rows = list(1:10, 11:20, 21:30, 31:40, 41:50, 51:60, 61:70,
71:80, 81:90, 91:100)), row.names = c(NA, -10L), class = c("tbl_df",
"tbl", "data.frame"), .drop = TRUE))
View(a)
dput(head(small.df,100))
install.packages('xkcd', dependencies = T)
vignette("xkcd-intro")
View(data.df)
ggplot(data = data.df, aes(x = X.step., y=nb_Ir, colour = i.proba.transmission))+
geom_point()+
# transition_time(i.proba.transmission)+
# shadow_mark(alpha = 0.3, size = 0.5)+
labs( title = 'Transmission probability', x = "time after first infection", y = "healthy person")+
# ggtitle('Transmission probability : {i.proba.transmission}')+
transition_states(i.proba.transmission,
transition_length = 2,
state_length = 1)
ggplot(data = data.df, aes(x = X.step., y=nb_Ir, colour = i.proba.transmission))+
geom_point()+
# transition_time(i.proba.transmission)+
# shadow_mark(alpha = 0.3, size = 0.5)+
labs( x = "temps", y = "% de personnes infectées")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA)
ggplot(data = data.df, aes(x = X.step., y=nb_Ir, colour = i.proba.transmission))+
geom_point()+
# transition_time(i.proba.transmission)+
# shadow_mark(alpha = 0.3, size = 0.5)+
labs( x = "temps", y = "% de personnes infectées")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA)+
transition_states(i.proba.transmission,
transition_length = 2,
state_length = 1)
ggplot(data = data.df, aes(x = X.step., y=nb_Ir, colour = i.proba.transmission))+
geom_point()+
# transition_time(i.proba.transmission)+
# shadow_mark(alpha = 0.3, size = 0.5)+
labs( x = "temps", y = "% de personnes infectées")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA, "probabilité\nde transmission")+
transition_states(i.proba.transmission,
transition_length = 2,
state_length = 1)
ggplot(data = data.df, aes(x = X.step., y=(nb_Ir/500)*100, colour = i.proba.transmission))+
geom_point()+
# transition_time(i.proba.transmission)+
# shadow_mark(alpha = 0.3, size = 0.5)+
labs( x = "temps", y = "% de personnes infectées")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA, "probabilité\nde transmission")+
transition_states(i.proba.transmission,
transition_length = 2,
state_length = 1)
ggplot(data = data.df, aes(x = X.step., y=(nb_Ir/500)*100, colour = i.proba.transmission))+
geom_point()+
# transition_time(i.proba.transmission)+
# shadow_mark(alpha = 0.3, size = 0.5)+
labs( x = "temps", y = "% de personnes infectées")+
xlim(0,350)+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA, "probabilité\nde transmission")+
transition_states(i.proba.transmission,
transition_length = 2,
state_length = 1)
ggplot(data = data.df, aes(x = X.step., y=(nb_Ir/500)*100, colour = i.proba.transmission))+
geom_point()+
# transition_time(i.proba.transmission)+
# shadow_mark(alpha = 0.3, size = 0.5)+
labs( x = "temps", y = "% de personnes infectées")+
xlim(0,350)+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA,
"probabilité de transmission\ndu virus à chaque contact")+
transition_states(i.proba.transmission,
transition_length = 2,
state_length = 1)
ggsave("img/transmission_effect.gif")
small.df <- data.df %>% ##Aggreger les résultats
group_by(X.step., i.proba.transmission) %>%
summarise(med.contamination = median(current.nb.new.infections.reported) + median(current.nb.new.infections.asymptomatic),
med.s = median(nb_S),
med.Ir = median(nb_Ir),
med.Inr = median(nb_Inr))
library(xkcd)
ggplot(data = small.df)+
geom_line(aes(x = X.step., y = med.Ir/500*100, group = i.proba.transmission, colour = i.proba.transmission))+
labs(title = "Evolution du nombre de personnes\nen bonne santé", x = "temps", y = "% de malade")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA,
"probabilité de transmission\ndu virus à chaque contact")+
# theme_light()
theme_xkcd
ggplot(data = small.df)+
geom_line(aes(x = X.step., y = med.Ir/500*100, group = i.proba.transmission, colour = i.proba.transmission))+
labs(title = "Evolution du nombre de personnes\nen bonne santé", x = "temps", y = "% de malade")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA,
"probabilité de transmission\ndu virus à chaque contact")+
# theme_light()
theme_xkcd()
ggplot(data = small.df)+
geom_line(aes(x = X.step., y = med.Ir/500*100, group = i.proba.transmission, colour = i.proba.transmission))+
labs(title = "Evolution du nombre de personnes\nen bonne santé", x = "temps", y = "% de malade")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA,
"probabilité de transmission\ndu virus à chaque contact")+
# theme_light()
theme_xkcd()
library(extrafont)
ggplot(data = small.df)+
geom_line(aes(x = X.step., y = med.Ir/500*100, group = i.proba.transmission, colour = i.proba.transmission))+
labs(title = "Evolution du nombre de personnes\nen bonne santé", x = "temps", y = "% de malade")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA,
"probabilité de transmission\ndu virus à chaque contact")+
# theme_light()
theme_xkcd()
ggplot(data = small.df)+
geom_line(aes(x = X.step., y = med.Ir/500*100, group = i.proba.transmission, colour = i.proba.transmission))+
labs(title = "Evolution du nombre de personnes\nen bonne santé", x = "temps", y = "% de malade")+
scale_colour_gradient(low = "yellow", high = "red", na.value = NA,
"probabilité de transmission\ndu virus à chaque contact")+
# theme_light()
theme_xkcd()
